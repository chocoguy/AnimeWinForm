 private void btnStartWatch_Click(object sender, EventArgs e)
        {
            string startDate;
            if (currentAnime.StartWatch.Year == 0001)
            {
                startDate = "None";

            }
            else
            {
                startDate = currentAnime.StartWatch.ToString();
            }
            MessageBoxButtons buttons = MessageBoxButtons.YesNo;
            DialogResult result = MessageBox.Show($"Would you like to start watching this anime? current start date is: {startDate}", "Start Watching", buttons);
            if(result == DialogResult.Yes)
            {
                localStorageHandler.SetAnimeWatching(currentAnime.Id);
            }
            else
            {

            }
        }

                private void btnStopWatch_Click(object sender, EventArgs e)
        {
            string stopDate;
            if (currentAnime.StartWatch.Year == 0001)
            {
                stopDate = "None";
            }
            else
            {
                stopDate = currentAnime.StopWatch.ToString();
            }
            MessageBoxButtons buttons = MessageBoxButtons.YesNo;
            DialogResult result = MessageBox.Show($"Would you like to start watching this anime? current stop date is: {stopDate}", "Sop Watching", buttons);
            if (result == DialogResult.Yes)
            {
                localStorageHandler.SetAnimeWatched(currentAnime.Id);
            }
            else
            {

            }
        }







--- frmEditAnime START ---

                if (row.Cells[1].Value.ToString() == "NotStarted" && row.Cells[0].Value.ToString() != "1")
                {
                    MessageBox.Show("Mark earlier episodes as 'Watched' or 'Skipped' to mark this episode");
                }
                else
                {
                    MessageBox.Show(row.Cells[2].Value.ToString());
                    MessageBox.Show(column.HeaderText);


                            private void btnRecentWatch_Click(object sender, EventArgs e)
        {
            //MessageBoxButtons buttons = MessageBoxButtons.YesNo;
            //DialogResult result = MessageBox.Show($"Would you like to set this anime as recently watched?", "Set watched", buttons);
            //if (result == DialogResult.Yes)
            //{
            //    localStorageHandler.UpdateRecentlyWatched(currentAnime.Id);
            //}
            //else
            //{

            //}
        }






--- frmEditAnime END ---





        //public void SetAnimeWatching(string Animeid)
        //{
        //    var options = new SQLiteConnectionString("./localstorage.sqlite3", false);
        //    var conn = new SQLiteConnection(options);

        //    string query = $"UPDATE Anime SET startWatch = {DateTime.Now} WHERE id = '{Animeid}' ";

        //    var result = conn.Query<Anime>(query);
        //}


        //public void SetAnimeWatched(string Animeid)
        //{
        //    var options = new SQLiteConnectionString("./localstorage.sqlite3", false);
        //    var conn = new SQLiteConnection(options);

        //    string query = $"UPDATE Anime SET stopWatch = {DateTime.Now} WHERE id = '{Animeid}' ";

        //    var result = conn.Query<Anime>(query);


        //}


        //public void UpdateRecentlyWatched(string Animeid)
        //{
        //    var options = new SQLiteConnectionString("./localstorage.sqlite3", false);
        //    var conn = new SQLiteConnection(options);

        //    string query1 = "SELECT * FROM Anime WHERE lastWatched > 0";

        //    var currentAnimes = conn.Query<Anime>(query1);

        //    foreach (var anime in currentAnimes)
        //    {
        //        int newLastWatchedValue;
        //        string tempQuery;
        //        switch (anime.LastWatched)
        //        {

        //            case 1:
        //                newLastWatchedValue = 2;
        //                break;
        //            case 2:
        //                newLastWatchedValue = 3;
        //                break;
        //            case 3:
        //                newLastWatchedValue = 4;
        //                break;
        //            case 5:
        //                newLastWatchedValue = 0;
        //                break;
        //            default:
        //                newLastWatchedValue = 0;
        //                break;
        //        }
        //        tempQuery = $"UPDATE Anime SET lastWatched = {newLastWatchedValue} WHERE id = '{anime.Id}' ";
        //        conn.Query<Anime>(tempQuery);
        //    }

        //    string query2 = $"UPDATE Anime SET lastWatched = 1 WHERE id = '{Animeid}' ";
        //    conn.Query<Anime>(query2);

        //    conn.Close();

        //}


                        //MessageBox.Show(cmbAnimeMon.SelectedValue.ToString());
                //MessageBox.Show(cmbAnimeMon.Items.IndexOf(monani).ToString());
                //cmbAnimeMon.SelectedValue = "das";
                //MessageBox.Show(cmbAnimeMon.SelectedValue.ToString());





        public List<Anime> GetRecentlyWatchedAnime()
        {
            var options = new SQLiteConnectionString("./localstorage.sqlite3", false);
            var conn = new SQLiteConnection(options);

            string query = $"SELECT * FROM Anime WHERE lastWatched > 0 ORDER BY lastWatched ASC";

            var results = conn.Query<Anime>(query);
            //maybeeee might not work
            conn.Close();
            return results;


        }